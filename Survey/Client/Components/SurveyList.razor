@using Survey.Shared

@if (Data != null)
{
    @*<table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Beskrivelse</th>
                <th>Kategori</th>
                <th>Slettet</th>
                <th>Lagt til</th>
                <th>Lagt til av</th>
                <th>Oppdatert</th>
                <th>Oppdatert av</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var i in Data)
            {
                <tr>
                    <td>@i.Id</td>
                    <td>@i.Description</td>
                    <td>@i.Category</td>
                    <td>@i.Deleted</td>
                    <td>@i.InsertedDate</td>
                    <td>@i.InsertedBy</td>
                    <td>@i.UpdatedDate</td>
                    <td>@i.UpdatedBy</td>
                </tr>
            }
        </tbody>
    </table>*@

    <div class="border-1 rounded-2">
        <DataGrid TItem="SurveyDto" Data="@Data" Sortable="true" Filterable="false" Editable="false" @bind-SelectedRow="@SelectedItem" Hoverable="true">
            <ChildContent>
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.Id)" Caption="Id" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.Description)" Caption="Beskrivelse" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.Deleted)" Caption="Slettet" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.InsertedDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Laget" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.InsertedBy)" Caption="Laget av" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.UpdatedDate)" DisplayFormat="{0:dd.MM.yyyy}" Caption="Oppdatert" />
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.UpdatedBy)" Caption="Oppdatert av" />
                
                <DataGridColumn TItem="SurveyDto" Field="@nameof(SurveyDto.Id)" Caption="Action">
                    <DisplayTemplate>
                        @*<Button class="btn btn-sm btn-info" @onclick="@(async (e) => await EditMedication(e, context))">Edit</Button>*@
                        <div class="btn-toolbar flex-nowrap">
                            <button type="button" class="btn btn-outline" @onclick=@(async (e) => await Edit(e, context))>
                                <span class="oi oi-pencil"></span>
                            </button>
                            <button type="button" class="btn btn-outline" @onclick=@(async (e) => await Delete(e, context))>
                                <span class="oi oi-trash"></span>
                            </button>
                        </div>
                    </DisplayTemplate>
                </DataGridColumn>
            </ChildContent>
            <LoadingTemplate>
                <div class="box">
                    <progress class="progress is-small is-primary" max="100" />
                </div>
            </LoadingTemplate>
        </DataGrid>

    </div>
}

@code
{
    [Inject] private IMessageService MessageService { get; set; }

    [Parameter] public IEnumerable<SurveyDto> Data { get; set; }
    [Parameter] public EventCallback<string> OnDelete { get; set; }
    [Parameter] public EventCallback<string> OnEdit { get; set; }

    private SurveyDto SelectedItem { get; set; }

    private async Task Edit(MouseEventArgs e, SurveyDto m)
    {
        await OnEdit.InvokeAsync(m.Id);
    }

    private async Task Delete(MouseEventArgs e, SurveyDto m)
    {
        if (await MessageService.Confirm($"Slette undersøkelse?", $"Er du sikker på du vil slette undersøkelsen {m.Description}?"))
        {
            await OnDelete.InvokeAsync(m.Id);
        }
    }
}
